spring.application.name=Job_Recommendation_System

spring.datasource.url=jdbc:postgresql://ep-dry-voice-a50twcud.us-east-2.aws.neon.tech/neondb?sslmode=require
spring.datasource.username=neondb_owner
spring.datasource.password=OpsTi7cLw5oE
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Enable Flyway
spring.flyway.enabled=true

# Optional: Flyway migration scripts location (default is `db/migration` in `resources`)
spring.flyway.locations=classpath:db/migration

# Optional: Schema version table (default is `flyway_schema_history`)
spring.flyway.table=flyway_schema_history

# Mail config
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=vasanitanishq2906@gmail.com
spring.mail.password=cflm rkgr dhhj uakp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=1032299387015-f7ffpn39k8mrudku03jgfhm3lp060s65.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
#spring.security.oauth2.client.registration.google.redirect-uri=${BASE_URL}/oauth2/callback/google
spring.security.oauth2.client.registration.google.redirect-uri=https://job-recommendation-system-backend.onrender.com/oauth2/callback/google
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.client.registration.google.client-name=Google

BASE_URL=https://job-recommendation-system-backend.onrender.com
#BASE_URL=http://localhost:8080

remotive.api.url=https://remotive.io/api/remote-jobs

hibernate.jdbc.batch_size=50
# You can adjust the batch size based on your scenario
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

spring.datasource.hikari.auto-commit=false



